---
import BannerLayout from "../layouts/BannerLayout.astro";

const cache: { data: any; expiry: number | null } = {
    data: null,
    expiry: null,
};

// fetch Spotify data with caching
const fetchSpotifyData = async () => {
    const apiURL = import.meta.env.PUBLIC_SPOTIFY_API;

    // check if the cache is valid
    const now = Date.now();
    if (cache.data && cache.expiry && now < cache.expiry) {
        return cache.data;
    }

    try {
        const response = await fetch(apiURL, { cache: "no-store" });
        if (!response.ok) throw new Error("Failed to fetch Spotify data");

        const data = await response.json();

        // cahce the data for 1 hour (3600000 ms)
        cache.data = data;
        cache.expiry = now + 3600000;

        return data;
    } catch {
        return {
            title: "default title",
            album: "default album",
            artist: "default artist",
            explicit: false,
            id: "4cOdK2wGLETKBW3PvgPWqT",
            coverURL: "/fallback.png",
        };
    }
};

// // Fetch data during SSR
// const { title, album, artist, explicit, id, coverURL } =
//     await fetchSpotifyData();
const urlParams = new URLSearchParams(Astro.request.url.split('?')[1]);

const title = urlParams.get('title') || ''; 
const album = urlParams.get('album') || ''; 
const artist = urlParams.get('artist') || ''; 
const explicit = urlParams.get('explicit') === 'true'; 
const coverURL = urlParams.get('coverURL') || ''; 
---

<BannerLayout
    title={title}
    album={album}
    artist={artist}
    explicit={explicit}
    coverURL={coverURL}
/>
